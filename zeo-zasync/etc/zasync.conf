# zasync configuration
#
# This file configures zasync to set up its running environment and define
# its behavior, including plugins, logging, ZEO server address, and retry
# behavior.

##############################################################################
# defines
##############################################################################

# ZConfig "defines" used for later textual substitution; ZOPE and INSTANCE
# must be defined for some defaults to work

%define ZOPE     /usr/local/Zope-2.9.1
%define INSTANCE /home/zopes/zeo-zasync

##############################################################################
# Set up the Zope environment so that products are available for import
##############################################################################

# Directive: environment
#
# Description:
#     A section which can be used to define arbitrary key-value pairs
#     for use as environment variables during Zope's run cycle.  It
#     is not recommended to set system-related environment variables such as
#     PYTHONPATH within this section.
#
# Default: unset
#
# Example:
#
    <environment>
       ZOPE3_SITE_ZCML $INSTANCE/etc/site.zcml
    </environment>

# Directive: instancehome
#
# Description:
#     The path to the data files, local product files, import directory,
#     and Extensions directory used by Zope.
#
# Example:
instancehome $INSTANCE

# Directive: products
#
# Description:
#     Name of a directory that contains additional Product packages.  This
#     directive may be used as many times as needed to add additional
#     collections of products.  Each directory identified will be
#     added to the __path__ of the Products package.  All Products are
#     initialized in ascending alphabetical order by product name.  If
#     two products with the same name exist in two Products directories,
#     the order in which the packages appear here defines the load
#     order.  The master Products directory exists in Zope's software home,
#     and cannot be removed from the products path (and should not be added
#     to it here).
#
# Example:
products $INSTANCE/Products

# Directive: path
#
# Description:
#     Name of a directory which should be inserted into the
#     the beginning of Python's module search path.  This directive
#     may be specified as many times as needed to insert additional
#     directories.  The set of directories specified is inserted into the
#     beginning of the module search path in the order which they are specified
#     here.  Note that the processing of this directive may happen too late
#     under some circumstances; it is recommended that you use the PYTHONPATH
#     environment variable if using this directive doesn't work for you.
#
# Default:
path $ZOPE/lib/python
path $ZOPE/lib/python/ZEO
path $INSTANCE/Products
path $INSTANCE/Products/zasync/client


# Directive: security-policy-implementation
#
# Description:
#     The default Zope security machinery is implemented in C.
#     Change this to "python" to use the Python version of the
#     Zope security machinery.  This impacts performance but
#     is useful for debugging purposes and required by Products such as
#     VerboseSecurity, which need to "monkey-patch" the security
#     machinery.
#
# Default: C
#
# Example:
#
#    security-policy-implementation python

# Directive: skip-authentication-checking
#
# Description:
#     Set this directive to 'on' to cause Zope to skip checks related
#     to authentication, for servers which serve only anonymous content.
#     Only works if security-policy-implementation is 'C'.
#
# Default: off
#
# Example:
#
skip-authentication-checking on

# Directive: skip-ownership-checking
#
# Description:
#     Set this directive to 'on' to cause Zope to ignore ownership checking
#     when attempting to execute "through the web" code. By default, this
#     directive is off in order to prevent 'trojan horse' security problems
#     whereby a user with less privilege can cause a user with more
#     privilege to execute dangerous code.
#
# Default: off
#
# Example:
#
skip-ownership-checking on

##############################################################################
# Identify the zasync's target: the ZEO server and the path to the
# asynchronous call manager.
##############################################################################

# Database (zodb_db) section
#
# Description:
#     A database section allows the definition of custom database and
#     storage types.  For zasync this is presumably always a ZEO server.
#
# ZEO client storage:

<zodb_db main>
  mount-point /
  # ZODB cache, in number of objects
  cache-size 5000
  pool-size              7
  version-pool-size      3
  version-cache-size   100
  <zeoclient>
    server localhost:8100
    storage 1
    name zeostorage
    var $INSTANCE/var
    # ZEO client cache, in bytes
    cache-size 20MB
    # Uncomment to have a persistent disk cache
    #client zeo1
  </zeoclient>
</zodb_db>


# Temporary storage: this is here to satisfy DBTab.  Do not use sessions in
# zasync!!
<zodb_db temporary>
    # Temporary storage database (for sessions)
    <temporarystorage>
      name temporary storage for sessioning
    </temporarystorage>
    mount-point /temp_folder
    container-class Products.TemporaryFolder.TemporaryContainer
</zodb_db>


# Directive: target
#
# Description:
#     identify the path to the object that implements the asynchronous call
#     manager interface
#
# Default:
target /asynchronous_call_manager

##############################################################################
# Define zasync's retry behavior
##############################################################################

# Directive: max-conflict-resolution-attempts
#
# Description:
#     The number of times a transaction with a ConflictError should be retried
#
# Default:
#     max-conflict-resolution-attempts 5

# Directive: initial-retry-delay
#
# Description:
#     The initial delay in seconds between attempts to resolve an error in
#     finding the ZEO server or the target
#
# Default:
#     initial-retry-delay 5

# Directive: retry-exponential-backoff
#
# Description:
#     An exponential backoff of the retry delay.  Set to 1 for no exponential
#     increase.  Values less than one are not allowed.
#
# Default:
#     retry-exponential-backoff 1.1

# Directive: max-total-retry
#
# Description:
#     The maximum total retry time since a failure in reaching the ZEO server
#     or the target before zasync gives a up.  A value of 0 indicates that
#     zasync should never give up.  Value is in seconds.
#
# Default:
#     max-total-retry 3600

##############################################################################
# load the plugins
##############################################################################

# Directive: plugin
#
# Description:
#     Load in zasync plugins.  Keys are the following:
#     - name:
#         The name of the plugin that Zope will use to call it.
#         Required.
#     - handler:
#         The handler for the plugin.  The arguments to this callable
#         are the signature that Zope calls should match.  Required.
#     - timeout:
#         The maximum timeout that this plugin allows.
#     - zope-aware:
#         Whether the plugin should receive information about the Zope deferred
#         (this should probably be a different directive, rather than a flag)
#
# Default:
#     (no plugins registered)
#
# Example:
#     <plugin>
#       name unprotected_ldap
#       handler Products.zasync.plugins.query_unprotected_ldap
#       timeout 60
#     </plugin>

# <plugin unprotected_ldap>
#   handler zasync.plugins.query_unprotected_ldap
#   timeout 60
#   # description Query ldap and return the results, if any
#   # retry yes
# </plugin>

# <plugin protected_ldap>
#   handler zasync.plugins.query_protected_ldap
#   timeout 60
#   # description Query ldaps (over SSL) and return the results, if any
#   # retry yes
# </plugin>

<plugin zope_exec>
  handler zasync.plugins.zope_exec
  # 14400 seconds is four hours
  timeout 14400
  zope-aware yes
  # description Perform tasks within Zope off the main app server
  # retry yes
</plugin>

<plugin schedule>
  handler zasync.plugins.schedule
  # 86400 seconds is one day
  timeout 86400
  # description Call the deferred in the specified number of seconds
  # retry yes
</plugin>

<plugin aggregate>
  handler zasync.plugins.aggregatePlugins
  # 14400 seconds is four hours
  timeout 14400
  zope-aware yes
  # description Aggregate calls to other plugins
  retry no
</plugin>

##############################################################################
# configure the loggers
##############################################################################

# Directives: logger
#
# Description:
#     This area should define an event log and a plugin log.  The
#     "event" logger logs Zope and zasync event
#     information.  The "plugin" logger logs plugin
#     information (or set the propagate key to "yes" to have these
#     messages appear in the main event log).  Each logger section
#     may contain a "level" name/value pair which indicates the level
#     of logging detail to capture for this logger.  The default level
#     is INFO.  Level may be any of "CRITICAL", 'ERROR", WARN", "INFO",
#     "DEBUG", and "ALL".  Each logger section may additionally contain
#     one or more "handler" sections which indicates a types of log
#     "handlers" (file, syslog, NT event log, etc) to be used for the
#     logger being defined.  There are 5 types of handlers: logfile,
#     syslog, win32-eventlog, http-handler, email-notifier.  Each
#     handler type has its own set of allowable subkeys which define
#     aspects of the handler.  All handler sections also allow for the
#     specification of a "format" (the log message format string), a
#     "dateformat" (the log message format for date strings), and a
#     "level", which has the same semantics of the overall logger
#     level but overrides the logger's level for the handler it's
#     defined upon.

<eventlog>
  level debug
  <logfile>
    path $INSTANCE/log/zasync_event.log
    level trace
  </logfile>
</eventlog>

<logger zasync>
  level trace
  <logfile>
    path $INSTANCE/log/zasync.log
    level trace
  </logfile>
</logger>

<logger plugins>
  level trace
  propagate yes
</logger>


# Directive: verbose-traceback
#
# Description:
#     Set this directive to 'on' to cause  zasync to produce very verbose
#     tracebacks, including the locals and globals for every frame.
#
# Default: off
#
# Example:
#
verbose-traceback on

